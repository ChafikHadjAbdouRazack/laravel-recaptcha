<?php
/**
 * Copyright (c) 2017 - present
 * LaravelGoogleRecaptcha - ReCaptchaV3Test.php
 * author: Roberto Belotti - roby.belotti@gmail.com
 * web : robertobelotti.com, github.com/biscolab
 * Initial version created on: 22/1/2019
 * MIT license: https://github.com/biscolab/laravel-recaptcha/blob/master/LICENSE
 */

namespace Biscolab\ReCaptcha\Tests;

use Biscolab\ReCaptcha\Facades\ReCaptcha;
use Biscolab\ReCaptcha\ReCaptchaBuilderV3;

/**
 * Class ReCaptchaV3Test
 * @package Biscolab\ReCaptcha\Tests
 */
class ReCaptchaV3Test extends TestCase {

    protected $recaptcha_v3        = null;

    /**
     * @test
     */
    public function testGetApiVersion() {
        $this->assertEquals($this->recaptcha_v3->getVersion(), 'v3');
    }

    /**
     * @test
     */
    public function testHtmlScriptTagJsApiV3GetHtmlScriptTag() {

        $r = $this->recaptcha_v3->htmlScriptTagJsApiV3();
        $this->assertRegexp('/csrfToken/', $r);
    }

    /**
     * @test
     */
    public function testAction() {

        $r = $this->recaptcha_v3->htmlScriptTagJsApiV3(['action' => 'someAction']);
        $this->assertRegexp('/someAction/', $r);
    }

    /**
     * @test
     */
    public function testFetchCallbackFunction() {

        $r = $this->recaptcha_v3->htmlScriptTagJsApiV3(['callback_then' => 'functionCallbackThen']);
        $this->assertRegexp('/functionCallbackThen\(response\)/', $r);
    }

    /**
     * @test
     */
    public function testcatchCallbackFunction() {

        $r = $this->recaptcha_v3->htmlScriptTagJsApiV3(['callback_catch' => 'functionCallbackCatch']);
        $this->assertRegexp('/functionCallbackCatch\(err\)/', $r);
    }

    protected function setUp() {

        parent::setUp(); // TODO: Change the autogenerated stub

        $this->recaptcha_v3 = new ReCaptchaBuilderV3('api_site_key', 'api_secret_key');

    }
}